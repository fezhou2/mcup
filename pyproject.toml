[project]
name = "mcup"
dynamic = ["version"]
description = "Model Context Protocol SDK Fork with user confirmation"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Feng Zhou, Nvidia" }]
maintainers = [
    { name = "Feng Zhou", email = "fezhou@nvidia.com" },
]
keywords = ["git", "mcup", "llm", "automation", "user-control"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "anyio>=4.5",
    "httpx>=0.27.1",
    "httpx-sse>=0.4",
    "pydantic>=2.11.0,<3.0.0",
    "starlette>=0.27",
    "python-multipart>=0.0.9",
    "sse-starlette>=1.6.1",
    "pydantic-settings>=2.5.2",
    "uvicorn>=0.31.1; sys_platform != 'emscripten'",
    "jsonschema>=4.20.0",
    "pywin32>=310; sys_platform == 'win32'",
    "aioconsole>=0.7.1"
]
[project.optional-dependencies]
rich = ["rich>=13.9.4"]
cli = ["typer>=0.16.0", "python-dotenv>=1.0.0"]
ws = ["websockets>=15.0.1"]
[project.scripts]
mcup = "mcup.cli:app [cli]"
[tool.uv]
default-groups = ["dev", "docs"]
required-version = ">=0.7.2"
[dependency-groups]
dev = [
    "pyright>=1.1.400",
    "pytest>=8.3.4",
    "ruff>=0.8.5",
    "trio>=0.26.2",
    "pytest-flakefinder>=1.1.0",
    "pytest-xdist>=3.6.1",
    "pytest-examples>=0.0.14",
    "pytest-pretty>=1.2.0",
    "inline-snapshot>=0.23.0",
    "dirty-equals>=0.9.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-material[imaging]>=9.5.45",
    "mkdocstrings-python>=1.12.2",
]
[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"
[tool.hatch.version]
source = "uv-dynamic-versioning"
[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true
[project.urls]
Homepage = "https://modelcontextprotocol.io"  # Or create a new MCUP homepage
Repository = "https://github.com/fezhou2/mcup"  # Update to your fork
Issues = "https://github.com/fezhou2/mcup/issues"  # Update to your fork
[tool.hatch.build.targets.wheel]
packages = ["src/mcup"]
[tool.pyright]
typeCheckingMode = "strict"
include = ["src/mcup", "tests", "examples/servers", "examples/snippets"]
venvPath = "."
venv = ".venv"
executionEnvironments = [
    { root = "tests", reportUnusedFunction = false, reportPrivateUsage = false },
    { root = "examples/servers", reportUnusedFunction = false },
]
[tool.ruff.lint]
select = ["C4", "E", "F", "I", "PERF", "UP"]
ignore = ["PERF203"]
[tool.ruff]
line-length = 120
target-version = "py310"
extend-exclude = ["README.md"]
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/server/fastmcp/test_func_metadata.py" = ["E501"]
[tool.uv.workspace]
members = ["examples/servers/*", "examples/snippets", "examples/mcup"]
[tool.uv.sources]
mcup = { workspace = true }
[tool.pytest.ini_options]
log_cli = true
xfail_strict = true
addopts = """
    --color=yes
    --capture=fd
    --numprocesses auto
"""
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:websockets",
    "ignore:websockets.server.WebSocketServerProtocol is deprecated:DeprecationWarning",
    "ignore:Returning str or bytes.*:DeprecationWarning:mcup.server.lowlevel",
    "ignore:getargs.*The 'u' format is deprecated:DeprecationWarning"
]
[tool.markdown.lint]
default = true
MD004 = false
MD007.indent = 2
MD013 = false
MD029 = false
MD033 = false
MD041 = false
MD059 = false